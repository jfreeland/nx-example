{
  "name": "products",
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "projectType": "application",
  "generators": {
    "@nx/workspace:component": {
      "style": "scss"
    }
  },
  "sourceRoot": "apps/products/src",
  "prefix": "nx-example",
  "targets": {
    "build": {
      "executor": "@angular-devkit/build-angular:browser",
      "options": {
        "aot": true,
        "outputPath": "dist/apps/products",
        "index": "apps/products/src/index.html",
        "main": "apps/products/src/main.ts",
        "polyfills": "apps/products/src/polyfills.ts",
        "tsConfig": "apps/products/tsconfig.app.json",
        "assets": [
          "apps/products/src/_redirects",
          {
            "input": "libs/shared/assets/src/assets",
            "glob": "**/*",
            "output": "assets"
          },
          {
            "input": "libs/shared/assets/src",
            "glob": "favicon.ico",
            "output": "."
          }
        ],
        "styles": [
          "libs/shared/styles/src/index.scss",
          "libs/shared/header/index.scss",
          "node_modules/normalize.css/normalize.css"
        ],
        "scripts": []
      },
      "configurations": {
        "production": {
          "fileReplacements": [
            {
              "replace": "apps/products/src/environments/environment.ts",
              "with": "apps/products/src/environments/environment.prod.ts"
            }
          ],
          "optimization": true,
          "outputHashing": "all",
          "sourceMap": false,
          "namedChunks": false,
          "aot": true,
          "extractLicenses": true,
          "vendorChunk": false,
          "buildOptimizer": true,
          "budgets": [
            {
              "type": "initial",
              "maximumWarning": "2mb",
              "maximumError": "5mb"
            },
            {
              "type": "anyComponentStyle",
              "maximumWarning": "6kb"
            }
          ]
        }
      },
      "outputs": [
        "{options.outputPath}"
      ]
    },
    "serve": {
      "executor": "@angular-devkit/build-angular:dev-server",
      "options": {
        "buildTarget": "products:build"
      },
      "configurations": {
        "production": {
          "buildTarget": "products:build:production"
        }
      }
    },
    "extract-i18n": {
      "executor": "@angular-devkit/build-angular:extract-i18n",
      "options": {
        "buildTarget": "products:build"
      }
    },
    "deploy": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          {
            "command": "npx ts-node --project tools/tsconfig.tools.json tools/scripts/deploy --siteName nrwl-nx-examples-products --outputPath dist/apps/products"
          }
        ]
      }
    },
    "version": {
      "executor": "@jscutlery/semver:version",
      "options": {
        "push": true,
        "postTargets": [
          "github",
          "build",
          "updateDeploy"
        ]
      }
    },
    "github": {
      "executor": "@jscutlery/semver:github",
      "options": {
        "tag": "{tag}",
        "notesFile": "./CHANGELOG.md"
      }
    },
    "updateDeploy": {
      "dependsOn": [
        "build"
      ],
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "echo project={projectName}",
          "echo \"Sometimes our yarn.lock has been modified and we don't care so we stash changes before continuing.\"",
          "set -x; git add .",
          "set -x; git stash",
          "set -x; git checkout main",
          "set -x; git pull --rebase",
          "set -x; sed -i -E \"s/([[:space:]]+image: some.docker.io\\/{projectName}):.*/\\1:{tag}/g\" deploy/*/*.yaml",
          "set -x; git add -A",
          "set -x; git commit -m \"ci({projectName}): deploy {tag}\"",
          "set -x; git push"
        ]
      }
    }
  },
  "tags": [
    "type:app",
    "scope:products"
  ],
  "implicitDependencies": [
    "shared-assets",
    "shared-styles"
  ]
}
